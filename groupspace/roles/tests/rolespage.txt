====================================
Functional Testing of the Roles Page
====================================

The test setup has already ensured that we have a number of users available.

    >>> from Products.Five.testbrowser import Browser
    >>> browser = Browser()
    >>> browser.handleErrors = False
    
Let us log all exceptions, which is useful for debugging.

    >>> self.portal.error_log._ignored_exceptions = ()
    
Manager
-------

A Manager should be able to delegate all the accessible roles. Let's also
take this opportunity to delegate some roles so that we can check what the
other roles can do.

    >>> browser.open('%s/logout' % self.portal.absolute_url())
    >>> browser.open('%s/login_form' % self.portal.absolute_url())
    >>> browser.getControl(name='__ac_name').value = 'manager'
    >>> browser.getControl(name='__ac_password').value = 'secret'
    >>> browser.getControl('Log in').click()
    
    >>> browser.open('%s/folder/@@roles' % self.folder.absolute_url())
    
    >>> browser.getControl(name='search_term').value = "delegate_contributor"
    >>> browser.getControl(name='form.button.Search').click()
    >>> browser.getControl(name='entries.role_GroupContributor:records').getControl(value='True',index=-1).click()

    >>> browser.getControl(name='search_term').value = "delegate_editor"
    >>> browser.getControl(name='form.button.Search').click()
    >>> browser.getControl(name='entries.role_GroupEditor:records').getControl(value='True',index=-1).click()

    >>> #browser.getControl(name='search_term').value = "delegate_admin"
    >>> #browser.getControl(name='form.button.Search').click()
    >>> #browser.getControl(name='entries.role_GroupManager:records').getControl(value='True',index=-1).click()
    
    >>> browser.getControl(name='search_term').value = "delegate_reader"
    >>> browser.getControl(name='form.button.Search').click()
    >>> browser.getControl(name='entries.role_GroupReader:records').getControl(value='True',index=-1).click()

    >>> browser.getControl("Save").click()
    >>> 'Changes saved' in browser.contents
    True
    
Owner
-----

The owner can access the roles page.

    >>> browser.open('%s/logout' % self.portal.absolute_url())
    >>> browser.open('%s/login_form' % self.portal.absolute_url())
    >>> browser.getControl(name='__ac_name').value = 'test_user_1_'
    >>> browser.getControl(name='__ac_password').value = 'secret'
    >>> browser.getControl('Log in').click()
    
    >>> browser.open('%s' % self.folder.absolute_url())
    >>> browser.getLink('Roles').click()
    
    >>> "Can manage" in browser.contents
    True
    >>> "Can add" in browser.contents
    True
    >>> "Can edit" in browser.contents
    True
    >>> "Can view" in browser.contents
    True

Delegated Admin
---------------

The delegated admin can access the roles page.

    >>> browser.open('%s/logout' % self.portal.absolute_url())
    >>> browser.open('%s/login_form' % self.portal.absolute_url())
    >>> browser.getControl(name='__ac_name').value = 'test_user_1_'
    >>> browser.getControl(name='__ac_password').value = 'secret'
    >>> browser.getControl('Log in').click()
    
    >>> browser.open('%s' % self.folder.absolute_url())
    >>> browser.getLink('Roles').click()
    
    >>> "Can manage" in browser.contents
    True
    >>> "Can add" in browser.contents
    True
    >>> "Can edit" in browser.contents
    True
    >>> "Can view" in browser.contents
    True

Delegated Reader
----------------

A delegated reader should only be able to view the page, not even get to the
Roles tab.

    >>> browser.open('%s/logout' % self.portal.absolute_url())
    >>> browser.open('%s/login_form' % self.portal.absolute_url())
    >>> browser.getControl(name='__ac_name').value = 'delegate_reader'
    >>> browser.getControl(name='__ac_password').value = 'secret'
    >>> browser.getControl('Log in').click()
    
    >>> browser.open('%s' % self.folder.absolute_url())
    >>> browser.getLink('Roles')
    Traceback (most recent call last):
    ...
    LinkNotFoundError

Delegated Editor
----------------

A delegated Editor should only be able to view the page, not even get to the
Roles tab.

    >>> browser.open('%s/logout' % self.portal.absolute_url())
    >>> browser.open('%s/login_form' % self.portal.absolute_url())
    >>> browser.getControl(name='__ac_name').value = 'delegate_editor'
    >>> browser.getControl(name='__ac_password').value = 'secret'
    >>> browser.getControl('Log in').click()
    
    >>> browser.open('%s' % self.folder.absolute_url())
    >>> browser.getLink('Roles')
    Traceback (most recent call last):
    ...
    LinkNotFoundError

Delegated Contributor
---------------------

A delegated Contributor cannot assign any further rights.

    >>> browser.open('%s/logout' % self.portal.absolute_url())
    >>> browser.open('%s/login_form' % self.portal.absolute_url())
    >>> browser.getControl(name='__ac_name').value = 'delegate_contributor'
    >>> browser.getControl(name='__ac_password').value = 'secret'
    >>> browser.getControl('Log in').click()
    
    >>> browser.open('%s' % self.folder.absolute_url())
    >>> browser.getLink('Roles').click()
    Traceback (most recent call last):
    ...
    LinkNotFoundError

